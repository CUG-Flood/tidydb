% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/db_write.R
\name{db_write}
\alias{db_write}
\title{Functions for writing data frames or delimiter-separated files to database tables.}
\usage{
db_write(
  src,
  value,
  name = NULL,
  overwrite = FALSE,
  append = FALSE,
  close = !is.dbi(src),
  ...
)
}
\arguments{
\item{src}{A \code{DBIConnection} (dbi) object, as returned by \code{\link[=db_open]{db_open()}} or
data.base \code{path}
\itemize{
\item \code{dbi}: not close after reading (default)
\item \code{path}: close after reading (default)
}}

\item{value}{\code{data.frame} or \code{list} object}

\item{name}{a character string specifying a table name. SQLite table names
are not case sensitive, e.g., table names ABC and abc are considered equal.}

\item{overwrite}{a logical specifying whether to overwrite an existing table
or not. Its default is FALSE.}

\item{append}{a logical specifying whether to append to an existing table in the DBMS.
Its default is FALSE.}

\item{close}{Boolean. Whether close connection after read.
\itemize{
\item \code{opened}: not close
\item \verb{not opened}: close
}}

\item{...}{Other parameters passed on to methods.}

\item{others}{to \code{\link[DBI:dbWriteTable]{DBI::dbWriteTable()}}}
}
\description{
Functions for writing data frames or delimiter-separated files to database tables.
}
\examples{
## example 01: write to memory
con <- db_open()
db_write(con, mtcars, close=FALSE)

d = tbl(con, "mtcars")
db_read(con, close=FALSE)
db_close(con)

## example02: write to file
f_db = "hello1.db"
if (file.exists(f_db)) file.remove(f_db)
db_write(f_db, mtcars)
tbl(f_db, "mtcars")
db_close()

is.data.frame(db_read(f_db))
file.remove(f_db)

## example03: write list
f_db <- "hello2.db"
if (file.exists(f_db)) file.remove(f_db)
l = list(a = mtcars, b = mtcars)
db_write(f_db, l)
all(db_tables(f_db) == names(l))

d = tbl(f_db, "a")
db_close()

db_read(f_db)
db_read(f_db, close = FALSE)
db_close()

file.remove(f_db)
}
\seealso{
\code{\link[DBI:dbWriteTable]{DBI::dbWriteTable()}}
}
